@model PagedList.IPagedList<EStore.Models.Product>
@using PagedList.Mvc

@{
    ViewBag.Title = "Products Page";
}

<main>
    <header class="custom-card bg-dark py-2 custom-shop-card">
        <div class="container px-4 px-lg-5">
            <div class="text-center text-white">
                <h1 class="fw-bolder mt-5" style="font-size:4em;">Shop in style</h1>
                <p class="lead fw-normal text-black" style="margin-top:-5%">Get 50% off on all products</p>
            </div>
        </div>
    </header>
    <!-- Section-->
    <section class="custom-card bg-light mt-3 p-2 px-3 mb-3">
        <div class="nav-item dropdown mt-3" id="dropdown">
            <button class="btn btn-outline-dark" onclick="toggleDropdown('')">
                <div class="nav-link dropdown-toggle" id="navbarDropdown">Filter by</div>
            </button>
            <ul class="dropdown-menu mt-2" aria-labelledby="navbarDropdown" id="dropdown-menu">
                <li>
                    <a class="dropdown-item" href="@Url.Action("Index", "Home", new {type = "All"})">All</a>
                </li>
                @{
                    var productTypes = ViewBag.Categories as IEnumerable<string>;
                    foreach (var item in productTypes)
                    {
                        <li>
                            @if (item == ViewBag.SortBy)
                            {
                                <a class="dropdown-item bg-info" href="@Url.Action("Index", "Home", new { sortBy = item, orderBy = ViewBag.OrderBy})">@item</a>
                            }
                            else
                            {
                                <a class="dropdown-item" href="@Url.Action("Index", "Home", new { sortBy = item,  orderBy = ViewBag.OrderBy})">@item</a>
                            }
                        </li>
                    }
                }
                <hr style="margin-top:-1%; margin-bottom:-1%" />
                @{
                    var orderTypes = ViewBag.OrderList as IEnumerable<string>;
                    foreach (var item in orderTypes)
                    {
                        <li>
                            @if (item == ViewBag.OrderBy)
                            {
                                <a class="dropdown-item bg-info" href="@Url.Action("Index", "Home", new { sortBy = ViewBag.SortBy, orderBy = item})">@item</a>
                            }
                            else
                            {
                                <a class="dropdown-item" href="@Url.Action("Index", "Home", new { sortBy = ViewBag.SortBy, orderBy = item})">@item</a>
                            }
                        </li>
                    }
                }
            </ul>
        </div>

        <div class="custom-card-inner mt-2">
            <div class="container px-4 px-lg-5 mt-5 justify-content-center">
                <div class="row gx-4 gx-lg-5 row-cols-2 row-cols-md-3 row-cols-xl-4 justify-content-center">
                    @{
                        if (Model.Count == 0)
                        {
                            <p class="text-md-center text-muted fw-bold mt-5">No Data To display :(</p>
                        }
                        else
                        {
                            <!--Product Listing begins-->
                            foreach (var item in Model)
                            {
                                <div class="col mb-5">
                                    <div class="card h-100">
                                        <!-- Product image-->
                                        <img class="card-body custom-image-home-view" src="@item.ImageSrc" alt="..." />
                                        <!-- Product details-->
                                        <div class="card-body p-4">
                                            <div class="text-center">
                                                <!-- Product name-->
                                                <h5 class="fw-bolder">@item.Name</h5>
                                                <!-- Product price-->
                                                $@item.Cost
                                            </div>
                                        </div>
                                        <!-- Product actions-->
                                        <div class="card-footer p-4 pt-0 border-top-0 bg-transparent">
                                            <div class="text-center">
                                                <a class="btn btn-outline-dark mt-auto" href="@Url.Action("Product", "Home", new { productName = item.Name})">
                                                    View options
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!--Product listing Ends-->
                            }
                        }
                    }
                </div>
            </div>
        </div>
        <div class="pagination-container">
            @{
                var pagingOptions = new PagedListRenderOptions
                {
                    LiElementClasses = new[] { "page-item" },
                    UlElementClasses = new[] { "pagination", "custom-pagination" },
                    DisplayLinkToFirstPage = PagedListDisplayMode.Never,
                    DisplayLinkToLastPage = PagedListDisplayMode.Never,
                    LinkToPreviousPageFormat = "<",
                    LinkToNextPageFormat = ">",
                };
            }
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortBy = ViewBag.sortBy, orderBy = ViewBag.OrderBy }), pagingOptions)
        </div>
    </section>
    
    <script src="~/Scripts/scripts.js">

    </script>
</main>
