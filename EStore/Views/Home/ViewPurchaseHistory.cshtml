@model PagedList.IPagedList<EStore.Models.Cart>
@using PagedList.Mvc

@{
    ViewBag.Title = "ViewPurchaseHistory";
}

<main>
    <div class="row">
        <div class="col-lg-8 mx-auto">
            <h2 class="my-5 text-center">Purchase History</h2>
            <!-- List group-->
            <!--Filter button-->
            <div class="nav-item dropdown" id="dropdown">
                <button class="btn btn-outline-dark" onclick="toggleDropdown()">
                    <div class="nav-link dropdown-toggle" id="navbarDropdown">Filter by: @ViewBag.sortBy</div>
                </button>
                <ul class="dropdown-menu mt-1" aria-labelledby="navbarDropdown" id="dropdown-menu">
                    <li>
                        <a class="dropdown-item" href="@Url.Action("ViewPurchaseHistory", "Home", new {sortBy = "All", page = Model.PageNumber})">All</a>
                    </li>
                    <hr style="margin-top:-1%; margin-bottom:-1%" />
                    @{
                        var categories = ViewBag.Categories as IEnumerable<string>;
                        foreach (var item in categories)
                        {
                            <li>
                                <a class="dropdown-item" href="@Url.Action("ViewPurchaseHistory", "Home", new {sortBy = item, page = Model.PageNumber})">@item</a>
                            </li>
                        }
                    }
                </ul>
            </div>
            <ul class="list-group mt-2">
                @{
                    foreach (var item in Model)
                    {
                        <!-- list group item-->
                        <li class="list-group-item">
                            <!-- Custom content-->
                            <div class="media align-items-lg-center flex-column flex-lg-row p-3">
                                <div class="media-body order-2 order-lg-1">
                                    <h5 class="mt-0 font-weight-bold mb-2">@item.Name</h5>
                                    <p class=" text-muted mb-0 small fw-bold">
                                        Quantity: @item.Quantity
                                    </p>
                                    <div class="d-flex align-items-center justify-content-between mt-1">
                                        @{
                                            var totalCost = item.Cost * item.Quantity;
                                        }
                                        <h6 class="font-weight-bold my-2">$@totalCost</h6>
                                        <ul class="list-inline small">
                                            <li class="list-inline-item m-0"><i class="fa fa-star text-success"></i></li>
                                            <li class="list-inline-item m-0"><i class="fa fa-star text-success"></i></li>
                                            <li class="list-inline-item m-0"><i class="fa fa-star text-success"></i></li>
                                            <li class="list-inline-item m-0"><i class="fa fa-star text-success"></i></li>
                                            <li class="list-inline-item m-0"><i class="fa fa-star-o text-gray"></i></li>
                                        </ul>
                                    </div>
                                </div>
                                <img src="@item.ImageSrc" class="ml-lg-5 order-1 order-lg-2" />
                            </div>
                            <!-- End -->
                        </li>

                    }
                }

            </ul>
            <!-- End -->
        </div>
    </div>
    <div>
        @{
            var pagingOptions = new PagedListRenderOptions
            {
                LiElementClasses = new[] { "page-item" },
                UlElementClasses = new[] { "pagination", "custom-pagination" },
                DisplayLinkToFirstPage = PagedListDisplayMode.Never,
                DisplayLinkToLastPage = PagedListDisplayMode.Never,
                LinkToPreviousPageFormat = "<",
                LinkToNextPageFormat = ">",
            };
        }
        @Html.PagedListPager(Model, page => Url.Action("ViewPurchaseHistory", new { page, sortBy = ViewBag.sortBy }), pagingOptions)
    </div>
</main>

@section Scripts{
    <script src="~/Scripts/scripts.js"></script>    
}

