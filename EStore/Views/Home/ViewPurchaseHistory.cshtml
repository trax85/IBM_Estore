@model PagedList.IPagedList<EStore.Models.TotalSales>
@using PagedList.Mvc

@{
    ViewBag.Title = "ViewPurchaseHistory";
}

<div class="custom-card bg-light mb-3">
    <div class="row">
        <div class="col-lg-9 mx-auto">
            <h2 class="mt-5 text-center">Purchase History</h2>
            <div class="custom-card-inner p-5 mt-2">
                <div class="row">
                    <!--Filter button-->
                    @{
                        var dateFrom = "Start";
                        var dateTo = "End";
                        var weekintervals = ViewBag.WeekIntervals as IEnumerable<DateTime>;
                        if (ViewBag.DateFrom != "Start")
                        {
                            var temp = DateTime.Parse(ViewBag.DateFrom);
                            dateFrom = temp.ToString("dd-MM-yyyy");
                        }
                        if (ViewBag.DateTo != "End")
                        {
                            var temp = DateTime.Parse(ViewBag.DateTo);
                            dateTo = temp.ToString("dd-MM-yyyy");
                        }
                    }
                    <div class="col d-flex justify-content-start">
                        <div class="dropdown" id="dropdown">
                            <button class="btn btn-outline-dark" onclick="toggleDropdown('')">
                                <div class="nav-link dropdown-toggle" id="navbarDropdown">Date From:@dateFrom </div>
                            </button>
                            <ul class="dropdown-menu mt-1" aria-labelledby="navbarDropdown" id="dropdown-menu">
                                <li>
                                    <a class="dropdown-item" href="@Url.Action("ViewPurchaseHistory", "Home", new {dateFrom = "Start", dateTo = "End", page = Model.PageNumber})">Start</a>
                                </li>
                                <hr style="margin-top:-1%; margin-bottom:-1%" />
                                @{
                                    foreach (var item in weekintervals)
                                    {
                                        <li>
                                            <a class="dropdown-item" href="@Url.Action("ViewPurchaseHistory", "Home", new {dateFrom = item, dateTo = ViewBag.DateTo ,page = Model.PageNumber})">@item.ToString("dd-MM-yyyy")</a>
                                        </li>
                                    }
                                }
                            </ul>
                        </div>
                        <div class="dropdown ml-2" id="dropdown2">
                            <button class="btn btn-outline-dark" onclick="toggleDropdown('2')">
                                <div class="nav-link dropdown-toggle" id="navbarDropdown">Date To: @dateTo</div>
                            </button>
                            <ul class="dropdown-menu mt-1" aria-labelledby="navbarDropdown" id="dropdown-menu2">
                                <li>
                                    <a class="dropdown-item" href="@Url.Action("ViewPurchaseHistory", "Home", new {dateFrom ="Start", dateTo = "End", page = Model.PageNumber})">End</a>
                                </li>
                                <hr style="margin-top:-1%; margin-bottom:-1%" />
                                @{
                                    foreach (var item in weekintervals)
                                    {
                                        <li>
                                            <a class="dropdown-item" href="@Url.Action("ViewPurchaseHistory", "Home", new {dateFrom = ViewBag.DateFrom, dateTo = item, page = Model.PageNumber})">@item.ToString("dd-MM-yyyy")</a>
                                        </li>
                                    }
                                }
                            </ul>
                        </div>
                    </div>
                </div>
                @{
                    if (Model.Count == 0)
                    {
                        <p class="text-md-center text-muted fw-bold mt-5">No Data To display :(</p>
                    }
                    else
                    {
                        <!-- List group-->
                        <ul class="list-group mt-2">
                            @{
                                foreach (var item in Model)
                                {
                                    <!-- list group item-->
                                    <li class="list-group-item">
                                        <!-- Custom content-->
                                        <div class="media align-items-lg-center flex-column flex-lg-row p-3">
                                            <div class="media-body order-2 order-lg-1">
                                                <h5 class="mt-0 font-weight-bold mb-2">@item.ProductName</h5>
                                                <p class=" text-muted mb-0 small fw-bold">
                                                    Quantity: @item.Quantity
                                                </p>
                                                <div class="d-flex align-items-center justify-content-between mt-1">
                                                    @{
                                                        var totalCost = item.Cost * item.Quantity;
                                                    }
                                                    <h6 class="font-weight-bold my-2">$@totalCost</h6>
                                                </div>
                                                <p class=" text-muted mb-0 small fw-bold">Purchased On: @item.Timestamp.ToString("dd-MM-yyyy")</p>
                                            </div>
                                            <img src="@item.ImageSrc" class="ml-lg-5 order-1 order-lg-2" />
                                        </div>

                                        <!-- End -->
                                    </li>
                                }
                            }
                        </ul>
                        <!-- End -->
                    }
                }
            </div>
        </div>
    </div>
    <div>
        @{
            var pagingOptions = new PagedListRenderOptions
            {
                LiElementClasses = new[] { "page-item" },
                UlElementClasses = new[] { "pagination", "custom-pagination" },
                DisplayLinkToFirstPage = PagedListDisplayMode.Never,
                DisplayLinkToLastPage = PagedListDisplayMode.Never,
                LinkToPreviousPageFormat = "<",
                LinkToNextPageFormat = ">",
            };
        }
        @Html.PagedListPager(Model, page => Url.Action("ViewPurchaseHistory", new { page, dateFrom = ViewBag.DateFrom ,dateTo = ViewBag.dateTo }), pagingOptions)
    </div>
</div>

@section Scripts{
    <script>
        function toggleDropdown(id) {
            var dropdown = document.getElementById("dropdown-menu" + id);
            dropdown.style.display = dropdown.style.display === "none" ? "block" : "none";
            console.log("dropdown-menu" + id);
            document.addEventListener("click", function (event) {
                var dropdown = document.getElementById("dropdown" + id);
                if (!dropdown.contains(event.target)) {
                    var dropdownMenu = document.getElementById(dropdown);
                    dropdownMenu.style.display = "none";
                }
            });
        }
    </script>
}

