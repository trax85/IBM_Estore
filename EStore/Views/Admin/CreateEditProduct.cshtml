@model EStore.Models.Product
@{
    Layout = "~/Views/_LayoutPageAdmin.cshtml";
}

@using (Html.BeginForm("SaveProduct", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="custom-card bg-light">
        <!-- Heading -->
        @if (TempData["isEdit"] as string == "false")
        {
            @Html.Hidden("isEdit", false)
            <h2 class="mt-3 text-center">Create Product</h2>
        }
        else
        {
            @Html.Hidden("isEdit", true)
            <h2 class="mt-3 text-center">Edit Product</h2>
        }

        <div class="row mt-2 p-3">
            <!--Grid column-->
            <div class="">
                <!--Card-->
                <div class="card p-4">
                    <!--Grid row-->
                    <div class="row mb-3">
                        <!--Grid column-->
                        <div class="col-md-6 mb-2">
                            <div class="form-outline mb-2">
                                <label class="form-label" for="typeText">Product Image</label>
                                <input type="file" name="ImageFile" id="ImageFile" class="form-control" />
                            </div>

                        </div>
                        <!--Grid column-->
                        <div class="" style="max-width:400px;max-height:400px;">
                            <!-- Display the image if available -->
                            <img id="previewImage" src="@Model.ImageSrc" class="custom-image-edit-view ml-4" />
                        </div>
                    </div>
                    <!--Grid row-->
                    <!--Product Name-->
                    <div class="form-outline">
                        <label class="form-label" for="typeText">Product name</label>
                        @if (Model.Name.IsEmpty())
                        {
                            @Html.TextBoxFor(m => m.Name, new
                            {
                                @class = "form-control",
                                placeholder = "Product Name",
                                required = "required",
                                value = Model.Name
                            })
                            @Html.ValidationMessageFor(m => m.Name, "", new { @style = "color:red" })
                        }
                        else
                        {
                            <input type="text" disabled class="form-control" placeholder="Username" aria-label="Username" aria-describedby="basic-addon1" value="@Model.Name" />
                            @Html.HiddenFor(m => m.Name);
                        }

                    </div>
                    <!--Product Description-->
                    <label class="form-label" for="typeText">Description</label>
                    <div class="input-group mb-1">
                        @Html.TextAreaFor(m => m.Description, new
                       {
                           @class = "form-control col-8",
                           placeholder = "Product Description",
                           required = "required"

                       })
                    </div>
                    @Html.ValidationMessageFor(m => m.Description, "", new { @style = "color:red" })

                    <!--Product Additional Desciption-->
                    <label class="form-label" for="typeText">Additional Description</label>
                    <div class="input-group mb-1">
                        @Html.TextAreaFor(m => m.AdditionalDescription, new
                       {
                           @class = "form-control col-8",
                           placeholder = "Additonal Details",
                           value = Model.AdditionalDescription,
                           required = "required"
                       })
                    </div>
                    @Html.ValidationMessageFor(m => m.AdditionalDescription, "", new { @style = "color:red", @class = "mb-2" })

                    <!--Product Cost-->
                    <label class="form-label" for="typeText">Cost</label>
                    <div class="input-group mb-1">
                        @Html.TextBoxFor(m => m.Cost, new
                       {
                           @class = "form-control",
                           placeholder = "1200",
                           value = Model.Cost,
                           required = "required"
                       })
                    </div>
                    @Html.ValidationMessageFor(m => m.Cost, "", new { @style = "color:red", @class = "mb-2" })

                    <!--Product Category-->
                    <p class="mb-1">
                        Category
                    </p>
                    @{
                        var selectList = new SelectList(Model.ProductCategories);
                    }
                    <div class="form-outline mb-4">
                        @Html.DropDownListFor(
                               m => m.Category,
                               selectList,
                               "Select Category",
                             new { @class = "card custom-dropdown p-2", @style = "width:50%" }
                        )
                        @Html.HiddenFor(m => m.ProductCategories)

                        @Html.ValidationMessageFor(m => m.Category, "", new { @style = "color:red" })
                    </div>

                    <div class="card-body">
                        <hr />
                    </div>
                    <button type="submit" class="btn btn-outline-dark mb-2"
                            onclick="@("window.location.href='" + @Url.Action("SaveProduct", "Admin") + "'");" )>
                        Submit
                    </button>
                    <button type="button" value="Cancle" class="btn btn-secondary btn-dark"
                            onclick="@("window.location.href='" + @Url.Action("Products", "Admin") + "'");">
                        Cancle
                    </button>
                    <!--Grid column-->
                </div>
            </div>
        </div>
    </div>
}

@section Scripts{
    <script>
        // JavaScript function to display the selected image
        function previewImage() {
            var fileInput = document.getElementById('ImageFile');
            var preview = document.getElementById('previewImage');

            if (fileInput.files && fileInput.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    preview.src = e.target.result;
                    preview.style.display = 'block';
                }

                reader.readAsDataURL(fileInput.files[0]);
            }
        }

        // Call the previewImage function when the user selects an image
        $(document).ready(function () {
            $('#ImageFile').change(function () {
                console.log("here");
                previewImage();
            });
        });
    </script>
}

