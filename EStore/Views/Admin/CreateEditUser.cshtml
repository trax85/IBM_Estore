@model EStore.Models.User
@{
    ViewBag.Title = "EditUser";
    Layout = "~/Views/_LayoutPageAdmin.cshtml";
}

@using (Html.BeginForm("Save", "Admin", FormMethod.Post))
{
<div class="">
        <!-- Heading -->
        @if (TempData["isEdit"] as string == "true") {
            @Html.Hidden("isEdit", false)
            <h2 class="mb-5 text-center">Create User</h2>
        } else { 
            @Html.Hidden("isEdit", true)
            <h2 class="mb-5 text-center">Edit User</h2>
        }
        
        <div class="row">
            <!--Grid column-->
            <div class="">
                <!--Card-->
                <div class="card p-4">
                    <!--Grid row-->
                    <div class="row mb-3">
                        <!--Grid column-->
                        <div class="col-md-6 mb-2">
                            <!--firstName-->
                            <div class="form-outline">
                                <label class="form-label" for="typeText">First name</label>
                                @Html.TextBoxFor(m => m.FirstName, new
                                {
                                    @class = "form-control",
                                    placeholder = "First Name",
                                    required = "required",
                                    value = Model.FirstName
                                })
                                @Html.ValidationMessageFor(m => m.FirstName, "", new { @style = "color:red" })
                            </div>
                        </div>
                        <!--Grid column-->
                        <!--Grid column-->
                        <div class="col-md-6 mb-2">
                            <!--lastName-->
                            <div class="form-outline">
                                <label class="form-label" for="typeText">Last name</label>
                                @Html.TextBoxFor(m => m.LastName, new
                                {
                                    @class = "form-control",
                                    placeholder = "Last Name",
                                    required = "required",
                                    value = Model.LastName
                                })
                                @Html.ValidationMessageFor(m => m.LastName, "", new { @style = "color:red" })
                            </div>
                        </div>
                        <!--Grid column-->
                    </div>
                    <!--Grid row-->
                    <!--Username-->
                    <label class="form-label" for="typeText">Username</label>
                    <div class="input-group">
                        <span class="input-group-text" id="basic-addon1"></span>
                        @if (!Model.UserName.IsEmpty())
                        {
                            <input type="text" disabled class="form-control" placeholder="Username" aria-label="Username" aria-describedby="basic-addon1" value="@Model.UserName" />
                            @Html.HiddenFor(m => m.UserName);
                        }
                        else
                        {
                            @Html.TextBoxFor(m => m.UserName, new
                            {
                                @class = "form-control",
                                placeholder = "Username",
                                required = "required"

                            })
                        }
                    </div>
                    @Html.ValidationMessageFor(m => m.UserName, "", new { @style = "color:red" })

                    <!--Password-->
                    <label class="form-label" for="typeText">Password</label>
                    <div class="input-group mb-1">
                        <span class="input-group-text" id="basic-addon1"></span>
                        @Html.PasswordFor(m => m.Password, new
                        {
                            @class = "form-control",
                            placeholder = "Password",
                            value = Model.Password,
                            required = "required"
                        })
                    </div>
                    @Html.ValidationMessageFor(m => m.Password, "", new { @style = "color:red", @class = "mb-2" })

                    <!--ConfirmPassword-->
                    <label class="form-label" for="typeText">Confirm Password</label>
                    <div class="input-group mb-1">
                        <span class="input-group-text" id="basic-addon1"></span>
                        @Html.PasswordFor(m => m.ComfirmPassword, new
                        {
                            @class = "form-control",
                            placeholder = "Confirm Password",
                            value = Model.Password,
                            required = "required"
                        })
                    </div>
                    @Html.ValidationMessageFor(m => m.ComfirmPassword, "", new { @style = "color:red", @class = "mb-2" })

                    <!--email-->
                    <p class="mb-0">
                        Email (optional)
                    </p>
                    <div class="form-outline mb-4">
                        @Html.TextBoxFor(m => m.EmailAddress, new
                        {
                            @class = "form-control",
                            placeholder = "youremail@example.com",
                            value = Model.EmailAddress
                        })
                        @Html.ValidationMessageFor(m => m.EmailAddress, "", new { @style = "color:red" })
                    </div>

                    <!--address-->
                    <p class="mb-0">
                        Address
                    </p>
                    <div class="form-outline mb-4">
                        @Html.TextBoxFor(m => m.Address, new
                        {
                            @class = "form-control",
                            placeholder = "1234 Main St",
                            value = Model.Address
                        })
                    </div>

                    <!--Grid row-->
                    <div class="row">
                        <!--Grid column-->
                        <div class="col-lg-4 col-md-12">
                            <p class="mb-0">
                                Country
                            </p>
                            <div class="form-outline mb-4">
                                @Html.TextBoxFor(m => m.Country, new
                                {
                                    @class = "form-control",
                                    placeholder = "United States",
                                    value = Model.Country
                                })
                            </div>
                        </div>
                        <!--Grid column-->
                        <!--Grid column-->
                        <div class="col-lg-4 col-md-12">
                            <p class="mb-0">
                                State
                            </p>
                            <div class="form-outline mb-4">
                                @Html.TextBoxFor(m => m.State, new
                                {
                                    @class = "form-control",
                                    placeholder = "California",
                                    value = Model.State
                                })
                            </div>
                        </div>
                        <!--Grid column-->
                        <!--Grid column-->
                        <div class="col-lg-4 col-md-12">
                            <p class="mb-0">
                                Zip
                            </p>
                            <div class="form-outline">
                                @Html.TextBoxFor(m => m.ZipCode, new
                                {
                                    @class = "form-control",
                                    placeholder = "",
                                    value = Model.ZipCode
                                })
                            </div>
                        </div>
                        <div>
                            <p class="mb-0">
                                User Type
                            </p>
                            <div class="ml-3 mt-3">
                                <label class="form-text">
                                    @Html.RadioButtonFor(m => m.Type, "Admin", new { id = "Admin", @checked = "checked" })
                                    Admin
                                </label>

                                <label class="form-text">
                                    @Html.RadioButtonFor(m => m.Type, "Customer", new { id = "Customer" })
                                    Customer
                                </label>
                            </div>
                        </div>
                        <div class="card-body">
                            <hr />
                        </div>
                        <button type="submit" class="btn btn-outline-dark mb-2"
                                onclick="@("window.location.href='" + @Url.Action("Users", "Admin") + "'");")>
                            Submit</button>
                        <input type="button" value="Cancle" class="btn btn-secondary btn-dark"
                               onclick="@("window.location.href='" + @Url.Action("Users", "Admin") + "'");" />
                        <!--Grid column-->
                    </div>
                </div>
            </div>
        </div>
    </div>
}
