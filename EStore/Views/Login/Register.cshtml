@model EStore.Models.User
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Register</title>
    <link href="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
    <script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
    <link href="~/Content/LoginStyleSheet.css" rel="stylesheet" />
</head>
<body>
    <div class="sidenav">
        <div class="login-main-text">
            <h1>EStore</h1><h2> Registration Page</h2>
            <p>Become a member of EStore.com</p>
        </div>
    </div>
    <div class="main">
        <div class="col-md-6 col-sm-12">
            <div class="register-form">
                @using (Html.BeginForm("Register", "Login", FormMethod.Post))
                {
                    <form>
                        <div class="form-group">
                            <label>Name</label>
                            @Html.TextBoxFor(m => m.Name, new
                            {
                                @class = "form-control",
                                placeholder = "Name",
                                required = "required"
                            })
                            @Html.ValidationMessageFor(m => m.Name, "", new { @style = "color:red" })
                        </div>
                        <div class="form-group">
                            <label>User Name</label>
                            @Html.TextBoxFor(m => m.UserName, new
                            {
                                @class = "form-control",
                                placeholder = "Username",
                                required = "required"
                            })
                            @Html.ValidationMessageFor(m => m.UserName, "", new { @style = "color:red" })
                            @if (TempData["ErrorMessage"] != null)
                            {
                                <p style="color:red">@TempData["ErrorMessage"]</p>
                            }
                        </div>
                        <div class="form-group">
                            <label>Password</label>
                            @Html.TextBoxFor(m => m.Password, new
                            {
                                @class = "form-control",
                                placeholder = "Password",
                                required = "required",
                                @type = "password"
                            })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @style = "color:red" })
                        </div>
                        <div class="form-group">
                            <label>Confirm Password</label>
                            @Html.TextBoxFor(m => m.ComfirmPassword, new
                           {
                               @class = "form-control",
                               placeholder = "Confirm Password",
                               required = "required",
                               @type = "password"
                           })
                            @Html.ValidationMessageFor(m => m.ComfirmPassword, "", new { @style = "color:red" })
                        </div>
                        <button type="submit" class="btn btn-black">Submit</button>
                        <input type="button" value="Cancle" class="btn btn-secondary" onclick="@("window.location.href='" + @Url.Action("SignIn", "Login") + "'");" />
                    </form>
                }
            </div>
        </div>
    </div>
</body>
</html>
